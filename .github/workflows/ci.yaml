on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: pip install poetry
      - run: poetry install
      - name: Log into Dockerhub
        if: github.event_name == 'push' && github.repository_owner == 'flavie'
        uses: docker/login-action@v2
        with:
          username: assaflavie
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: make test
      - if: ${{ failure() }}
        run: ./inspect_fixtures.sh

  publish:
    # only run on master pushes
    if: github.ref == 'refs/heads/master'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - run: pip install poetry
      - run: poetry install
      - name: Determine version
        run: echo "VERSION=$(poetry run ./current_version.py)" >>${GITHUB_ENV}
      - run: make pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
      - name: Wait for pypi package
        run: bin/wait_for_pip.sh ${{ env.VERSION }}
      # Enables builds for different CPU architectures
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into Dockerhub
        uses: docker/login-action@v2
        with:
          username: assaflavie
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        env:
          IMAGE_NAME: assaflavie/runlike
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          build-args: |
            VERSION=${{ env.VERSION }}
          provenance: false
          push: true